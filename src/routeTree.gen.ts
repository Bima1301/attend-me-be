/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as BackofficeRouteImport } from './routes/_backoffice'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DemoTanstackQueryRouteImport } from './routes/demo/tanstack-query'
import { Route as AuthSignInRouteImport } from './routes/auth/sign-in'
import { Route as BackofficeHomeIndexRouteImport } from './routes/_backoffice/home/index'
import { Route as BackofficeDashboardIndexRouteImport } from './routes/_backoffice/dashboard/index'

const BackofficeRoute = BackofficeRouteImport.update({
  id: '/_backoffice',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoTanstackQueryRoute = DemoTanstackQueryRouteImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignInRoute = AuthSignInRouteImport.update({
  id: '/auth/sign-in',
  path: '/auth/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const BackofficeHomeIndexRoute = BackofficeHomeIndexRouteImport.update({
  id: '/home/',
  path: '/home/',
  getParentRoute: () => BackofficeRoute,
} as any)
const BackofficeDashboardIndexRoute =
  BackofficeDashboardIndexRouteImport.update({
    id: '/dashboard/',
    path: '/dashboard/',
    getParentRoute: () => BackofficeRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/dashboard': typeof BackofficeDashboardIndexRoute
  '/home': typeof BackofficeHomeIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/dashboard': typeof BackofficeDashboardIndexRoute
  '/home': typeof BackofficeHomeIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_backoffice': typeof BackofficeRouteWithChildren
  '/auth/sign-in': typeof AuthSignInRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/_backoffice/dashboard/': typeof BackofficeDashboardIndexRoute
  '/_backoffice/home/': typeof BackofficeHomeIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth/sign-in'
    | '/demo/tanstack-query'
    | '/dashboard'
    | '/home'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/auth/sign-in' | '/demo/tanstack-query' | '/dashboard' | '/home'
  id:
    | '__root__'
    | '/'
    | '/_backoffice'
    | '/auth/sign-in'
    | '/demo/tanstack-query'
    | '/_backoffice/dashboard/'
    | '/_backoffice/home/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BackofficeRoute: typeof BackofficeRouteWithChildren
  AuthSignInRoute: typeof AuthSignInRoute
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_backoffice': {
      id: '/_backoffice'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof BackofficeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/sign-in': {
      id: '/auth/sign-in'
      path: '/auth/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_backoffice/home/': {
      id: '/_backoffice/home/'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof BackofficeHomeIndexRouteImport
      parentRoute: typeof BackofficeRoute
    }
    '/_backoffice/dashboard/': {
      id: '/_backoffice/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof BackofficeDashboardIndexRouteImport
      parentRoute: typeof BackofficeRoute
    }
  }
}

interface BackofficeRouteChildren {
  BackofficeDashboardIndexRoute: typeof BackofficeDashboardIndexRoute
  BackofficeHomeIndexRoute: typeof BackofficeHomeIndexRoute
}

const BackofficeRouteChildren: BackofficeRouteChildren = {
  BackofficeDashboardIndexRoute: BackofficeDashboardIndexRoute,
  BackofficeHomeIndexRoute: BackofficeHomeIndexRoute,
}

const BackofficeRouteWithChildren = BackofficeRoute._addFileChildren(
  BackofficeRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BackofficeRoute: BackofficeRouteWithChildren,
  AuthSignInRoute: AuthSignInRoute,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
